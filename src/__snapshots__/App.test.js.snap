// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> mount rendering matches the snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_reactInternalFiber": FiberNode {
        "_debugID": 24,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 23,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 21,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 21,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h1
                                                                        class="App-title"
                                                      >
                                                                        Welcome to React
                                                      </h1>
                                    </header>
                                    <p
                                                      class="App-intro"
                                    >
                                                      To get started, edit 
                                                      <code>
                                                                        src/App.js
                                                      </code>
                                                      and save to reload.
                                    </p>
                                    <div>
                                                      jaime
                                    </div>
                                    <ul />
                                    <ul />
                                    <ul />
                                    <p
                                                      class="button-state"
                                    >
                                                      No!
                                    </p>
                                    <button>
                                                      Click
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <header
                                                class="App-header"
                                >
                                                <img
                                                                src="logo.svg"
                                                                class="App-logo"
                                                                alt="logo"
                                                />
                                                <h1
                                                                class="App-title"
                                                >
                                                                Welcome to React
                                                </h1>
                                </header>
                                <p
                                                class="App-intro"
                                >
                                                To get started, edit 
                                                <code>
                                                                src/App.js
                                                </code>
                                                and save to reload.
                                </p>
                                <div>
                                                jaime
                                </div>
                                <ul />
                                <ul />
                                <ul />
                                <p
                                                class="button-state"
                                >
                                                No!
                                </p>
                                <button>
                                                Click
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": 0,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 25,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
            "lineNumber": 15,
          },
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 26,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
              "lineNumber": 16,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 34,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                "lineNumber": 17,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": null,
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 35,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                  "lineNumber": 18,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Welcome to React",
                  "className": "App-title",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Welcome to React",
                  "className": "App-title",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <h1
                  class="App-title"
>
                  Welcome to React
</h1>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "h1",
                "updateQueue": null,
              },
              "stateNode": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "img",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h1
                  className="App-title"
>
                  Welcome to React
</h1>,
              ],
              "className": "App-header",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h1
                  className="App-title"
>
                  Welcome to React
</h1>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 27,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                "lineNumber": 20,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 36,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": "To get started, edit ",
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": "To get started, edit ",
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 37,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                    "lineNumber": 21,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "src/App.js",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "src/App.js",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 38,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": " and save to reload.",
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": " and save to reload.",
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": and save to reload.,
                    "tag": 6,
                    "treeBaseTime": 0,
                    "type": null,
                    "updateQueue": null,
                  },
                  "stateNode": <code>
                    src/App.js
</code>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "code",
                  "updateQueue": null,
                },
                "stateNode": To get started, edit ,
                "tag": 6,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  "To get started, edit ",
                  <code>
                    src/App.js
</code>,
                  " and save to reload.",
                ],
                "className": "App-intro",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  "To get started, edit ",
                  <code>
                    src/App.js
</code>,
                  " and save to reload.",
                ],
                "className": "App-intro",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 28,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                  "lineNumber": 23,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 39,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                    "lineNumber": 6,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "jaime",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "jaime",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div>
                    jaime
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "text": "jaime",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "text": "jaime",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 29,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                    "lineNumber": 24,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                      "lineNumber": 25,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 4,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 31,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                        "lineNumber": 26,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 5,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                          "lineNumber": 27,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 6,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "No!",
                          "className": "button-state",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "No!",
                          "className": "button-state",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 33,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                            "lineNumber": 28,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 7,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Click",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Click",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <button>
                            Click
</button>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <p
                          class="button-state"
>
                          No!
</p>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "stateNode": <ul />,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "ul",
                      "updateQueue": null,
                    },
                    "stateNode": <ul />,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "ul",
                    "updateQueue": null,
                  },
                  "stateNode": <ul />,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "ul",
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": <p
                class="App-intro"
>
                To get started, edit 
                <code>
                                src/App.js
                </code>
                and save to reload.
</p>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "p",
              "updateQueue": null,
            },
            "stateNode": <header
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h1
                            class="App-title"
              >
                            Welcome to React
              </h1>
</header>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "header",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <header
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <h1
                                className="App-title"
                >
                                Welcome to React
                </h1>
</header>,
              <p
                className="App-intro"
>
                To get started, edit 
                <code>
                                src/App.js
                </code>
                 and save to reload.
</p>,
              <Title
                text="jaime"
/>,
              <ul />,
              <ul />,
              <ul />,
              <p
                className="button-state"
>
                No!
</p>,
              <button
                onClick={[Function]}
>
                Click
</button>,
            ],
            "className": "App",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <header
                className="App-header"
>
                <img
                                alt="logo"
                                className="App-logo"
                                src="logo.svg"
                />
                <h1
                                className="App-title"
                >
                                Welcome to React
                </h1>
</header>,
              <p
                className="App-intro"
>
                To get started, edit 
                <code>
                                src/App.js
                </code>
                 and save to reload.
</p>,
              <Title
                text="jaime"
/>,
              <ul />,
              <ul />,
              <ul />,
              <p
                className="button-state"
>
                No!
</p>,
              <button
                onClick={[Function]}
>
                Click
</button>,
            ],
            "className": "App",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div
            class="App"
>
            <header
                        class="App-header"
            >
                        <img
                                    src="logo.svg"
                                    class="App-logo"
                                    alt="logo"
                        />
                        <h1
                                    class="App-title"
                        >
                                    Welcome to React
                        </h1>
            </header>
            <p
                        class="App-intro"
            >
                        To get started, edit 
                        <code>
                                    src/App.js
                        </code>
                        and save to reload.
            </p>
            <div>
                        jaime
            </div>
            <ul />
            <ul />
            <ul />
            <p
                        class="button-state"
            >
                        No!
            </p>
            <button>
                        Click
            </button>
</div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "on": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 23,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 21,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": FiberNode {
              "_debugID": 21,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h1
                                                                        class="App-title"
                                                      >
                                                                        Welcome to React
                                                      </h1>
                                    </header>
                                    <p
                                                      class="App-intro"
                                    >
                                                      To get started, edit 
                                                      <code>
                                                                        src/App.js
                                                      </code>
                                                      and save to reload.
                                    </p>
                                    <div>
                                                      jaime
                                    </div>
                                    <ul />
                                    <ul />
                                    <ul />
                                    <p
                                                      class="button-state"
                                    >
                                                      No!
                                    </p>
                                    <button>
                                                      Click
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="App"
                >
                                <header
                                                class="App-header"
                                >
                                                <img
                                                                src="logo.svg"
                                                                class="App-logo"
                                                                alt="logo"
                                                />
                                                <h1
                                                                class="App-title"
                                                >
                                                                Welcome to React
                                                </h1>
                                </header>
                                <p
                                                class="App-intro"
                                >
                                                To get started, edit 
                                                <code>
                                                                src/App.js
                                                </code>
                                                and save to reload.
                                </p>
                                <div>
                                                jaime
                                </div>
                                <ul />
                                <ul />
                                <ul />
                                <p
                                                class="button-state"
                                >
                                                No!
                                </p>
                                <button>
                                                Click
                                </button>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "on": false,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="App"
>
        <header
                class="App-header"
        >
                <img
                        src="logo.svg"
                        class="App-logo"
                        alt="logo"
                />
                <h1
                        class="App-title"
                >
                        Welcome to React
                </h1>
        </header>
        <p
                class="App-intro"
        >
                To get started, edit 
                <code>
                        src/App.js
                </code>
                and save to reload.
        </p>
        <div>
                jaime
        </div>
        <ul />
        <ul />
        <ul />
        <p
                class="button-state"
        >
                No!
        </p>
        <button>
                Click
        </button>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
            />
            <h1
                        className="App-title"
            >
                        Welcome to React
            </h1>
</header>,
          <p
            className="App-intro"
>
            To get started, edit 
            <code>
                        src/App.js
            </code>
             and save to reload.
</p>,
          <Title
            text="jaime"
/>,
          <ul />,
          <ul />,
          <ul />,
          <p
            className="button-state"
>
            No!
</p>,
          <button
            onClick={[Function]}
>
            Click
</button>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <header
            class="App-header"
>
            <img
                        src="logo.svg"
                        class="App-logo"
                        alt="logo"
            />
            <h1
                        class="App-title"
            >
                        Welcome to React
            </h1>
</header>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
/>,
              <h1
                className="App-title"
>
                Welcome to React
</h1>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <img
                src="logo.svg"
                class="App-logo"
                alt="logo"
/>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "img",
            },
            Object {
              "instance": <h1
                class="App-title"
>
                Welcome to React
</h1>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React",
                "className": "App-title",
              },
              "ref": null,
              "rendered": Array [
                "Welcome to React",
              ],
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": <p
            class="App-intro"
>
            To get started, edit 
            <code>
                        src/App.js
            </code>
            and save to reload.
</p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "To get started, edit ",
              <code>
                src/App.js
</code>,
              " and save to reload.",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "To get started, edit ",
            Object {
              "instance": <code>
                src/App.js
</code>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "src/App.js",
              },
              "ref": null,
              "rendered": Array [
                "src/App.js",
              ],
              "type": "code",
            },
            " and save to reload.",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "jaime",
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              jaime
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "jaime",
            },
            "ref": null,
            "rendered": Array [
              "jaime",
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": <ul />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "ul",
        },
        Object {
          "instance": <ul />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "ul",
        },
        Object {
          "instance": <ul />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "ul",
        },
        Object {
          "instance": <p
            class="button-state"
>
            No!
</p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No!",
            "className": "button-state",
          },
          "ref": null,
          "rendered": Array [
            "No!",
          ],
          "type": "p",
        },
        Object {
          "instance": <button>
            Click
</button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Click",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Click",
          ],
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_reactInternalFiber": FiberNode {
          "_debugID": 24,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 23,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 21,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 21,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <header
                                                            class="App-header"
                                        >
                                                            <img
                                                                                src="logo.svg"
                                                                                class="App-logo"
                                                                                alt="logo"
                                                            />
                                                            <h1
                                                                                class="App-title"
                                                            >
                                                                                Welcome to React
                                                            </h1>
                                        </header>
                                        <p
                                                            class="App-intro"
                                        >
                                                            To get started, edit 
                                                            <code>
                                                                                src/App.js
                                                            </code>
                                                            and save to reload.
                                        </p>
                                        <div>
                                                            jaime
                                        </div>
                                        <ul />
                                        <ul />
                                        <ul />
                                        <p
                                                            class="button-state"
                                        >
                                                            No!
                                        </p>
                                        <button>
                                                            Click
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h1
                                                                        class="App-title"
                                                      >
                                                                        Welcome to React
                                                      </h1>
                                    </header>
                                    <p
                                                      class="App-intro"
                                    >
                                                      To get started, edit 
                                                      <code>
                                                                        src/App.js
                                                      </code>
                                                      and save to reload.
                                    </p>
                                    <div>
                                                      jaime
                                    </div>
                                    <ul />
                                    <ul />
                                    <ul />
                                    <p
                                                      class="button-state"
                                    >
                                                      No!
                                    </p>
                                    <button>
                                                      Click
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": 0,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 25,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
              "lineNumber": 15,
            },
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 26,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                "lineNumber": 16,
              },
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 34,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                  "lineNumber": 17,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 35,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                    "lineNumber": 18,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Welcome to React",
                    "className": "App-title",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Welcome to React",
                    "className": "App-title",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <h1
                    class="App-title"
>
                    Welcome to React
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "stateNode": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "img",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h1
                    className="App-title"
>
                    Welcome to React
</h1>,
                ],
                "className": "App-header",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
/>,
                  <h1
                    className="App-title"
>
                    Welcome to React
</h1>,
                ],
                "className": "App-header",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 27,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                  "lineNumber": 20,
                },
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 36,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": "To get started, edit ",
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": "To get started, edit ",
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 37,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                      "lineNumber": 21,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "src/App.js",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "src/App.js",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 38,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": " and save to reload.",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": " and save to reload.",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": and save to reload.,
                      "tag": 6,
                      "treeBaseTime": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "stateNode": <code>
                      src/App.js
</code>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "code",
                    "updateQueue": null,
                  },
                  "stateNode": To get started, edit ,
                  "tag": 6,
                  "treeBaseTime": 0,
                  "type": null,
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    "To get started, edit ",
                    <code>
                      src/App.js
</code>,
                    " and save to reload.",
                  ],
                  "className": "App-intro",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    "To get started, edit ",
                    <code>
                      src/App.js
</code>,
                    " and save to reload.",
                  ],
                  "className": "App-intro",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 28,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                    "lineNumber": 23,
                  },
                  "actualDuration": 0,
                  "actualStartTime": 0,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 39,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                      "lineNumber": 6,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "jaime",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "jaime",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div>
                      jaime
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "text": "jaime",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "text": "jaime",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 29,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                      "lineNumber": 24,
                    },
                    "actualDuration": 0,
                    "actualStartTime": 0,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": FiberNode {
                      "_debugID": 30,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                        "lineNumber": 25,
                      },
                      "actualDuration": 0,
                      "actualStartTime": 0,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 4,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": FiberNode {
                        "_debugID": 31,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                          "lineNumber": 26,
                        },
                        "actualDuration": 0,
                        "actualStartTime": 0,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 5,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": FiberNode {
                          "_debugID": 32,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                            "lineNumber": 27,
                          },
                          "actualDuration": 0,
                          "actualStartTime": 0,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 6,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "No!",
                            "className": "button-state",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "No!",
                            "className": "button-state",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 33,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/media/jaime/external-drive/react-enzyme-jest/src/App.js",
                              "lineNumber": 28,
                            },
                            "actualDuration": 0,
                            "actualStartTime": 0,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 7,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Click",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Click",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": null,
                            "stateNode": <button>
                              Click
</button>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <p
                            class="button-state"
>
                            No!
</p>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "stateNode": <ul />,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "ul",
                        "updateQueue": null,
                      },
                      "stateNode": <ul />,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "ul",
                      "updateQueue": null,
                    },
                    "stateNode": <ul />,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "ul",
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": <p
                  class="App-intro"
>
                  To get started, edit 
                  <code>
                                    src/App.js
                  </code>
                  and save to reload.
</p>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "p",
                "updateQueue": null,
              },
              "stateNode": <header
                class="App-header"
>
                <img
                                src="logo.svg"
                                class="App-logo"
                                alt="logo"
                />
                <h1
                                class="App-title"
                >
                                Welcome to React
                </h1>
</header>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "header",
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <header
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h1
                                    className="App-title"
                  >
                                    Welcome to React
                  </h1>
</header>,
                <p
                  className="App-intro"
>
                  To get started, edit 
                  <code>
                                    src/App.js
                  </code>
                   and save to reload.
</p>,
                <Title
                  text="jaime"
/>,
                <ul />,
                <ul />,
                <ul />,
                <p
                  className="button-state"
>
                  No!
</p>,
                <button
                  onClick={[Function]}
>
                  Click
</button>,
              ],
              "className": "App",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <header
                  className="App-header"
>
                  <img
                                    alt="logo"
                                    className="App-logo"
                                    src="logo.svg"
                  />
                  <h1
                                    className="App-title"
                  >
                                    Welcome to React
                  </h1>
</header>,
                <p
                  className="App-intro"
>
                  To get started, edit 
                  <code>
                                    src/App.js
                  </code>
                   and save to reload.
</p>,
                <Title
                  text="jaime"
/>,
                <ul />,
                <ul />,
                <ul />,
                <p
                  className="button-state"
>
                  No!
</p>,
                <button
                  onClick={[Function]}
>
                  Click
</button>,
              ],
              "className": "App",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="App"
>
              <header
                            class="App-header"
              >
                            <img
                                          src="logo.svg"
                                          class="App-logo"
                                          alt="logo"
                            />
                            <h1
                                          class="App-title"
                            >
                                          Welcome to React
                            </h1>
              </header>
              <p
                            class="App-intro"
              >
                            To get started, edit 
                            <code>
                                          src/App.js
                            </code>
                            and save to reload.
              </p>
              <div>
                            jaime
              </div>
              <ul />
              <ul />
              <ul />
              <p
                            class="button-state"
              >
                            No!
              </p>
              <button>
                            Click
              </button>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "on": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 23,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": 0,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 21,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": 0,
              "alternate": FiberNode {
                "_debugID": 21,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": 0,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="App"
                    >
                                        <header
                                                            class="App-header"
                                        >
                                                            <img
                                                                                src="logo.svg"
                                                                                class="App-logo"
                                                                                alt="logo"
                                                            />
                                                            <h1
                                                                                class="App-title"
                                                            >
                                                                                Welcome to React
                                                            </h1>
                                        </header>
                                        <p
                                                            class="App-intro"
                                        >
                                                            To get started, edit 
                                                            <code>
                                                                                src/App.js
                                                            </code>
                                                            and save to reload.
                                        </p>
                                        <div>
                                                            jaime
                                        </div>
                                        <ul />
                                        <ul />
                                        <ul />
                                        <p
                                                            class="button-state"
                                        >
                                                            No!
                                        </p>
                                        <button>
                                                            Click
                                        </button>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="App"
                  >
                                    <header
                                                      class="App-header"
                                    >
                                                      <img
                                                                        src="logo.svg"
                                                                        class="App-logo"
                                                                        alt="logo"
                                                      />
                                                      <h1
                                                                        class="App-title"
                                                      >
                                                                        Welcome to React
                                                      </h1>
                                    </header>
                                    <p
                                                      class="App-intro"
                                    >
                                                      To get started, edit 
                                                      <code>
                                                                        src/App.js
                                                      </code>
                                                      and save to reload.
                                    </p>
                                    <div>
                                                      jaime
                                    </div>
                                    <ul />
                                    <ul />
                                    <ul />
                                    <p
                                                      class="button-state"
                                    >
                                                      No!
                                    </p>
                                    <button>
                                                      Click
                                    </button>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "on": false,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="App"
>
          <header
                    class="App-header"
          >
                    <img
                              src="logo.svg"
                              class="App-logo"
                              alt="logo"
                    />
                    <h1
                              class="App-title"
                    >
                              Welcome to React
                    </h1>
          </header>
          <p
                    class="App-intro"
          >
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                    and save to reload.
          </p>
          <div>
                    jaime
          </div>
          <ul />
          <ul />
          <ul />
          <p
                    class="button-state"
          >
                    No!
          </p>
          <button>
                    Click
          </button>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className="App-header"
>
              <img
                            alt="logo"
                            className="App-logo"
                            src="logo.svg"
              />
              <h1
                            className="App-title"
              >
                            Welcome to React
              </h1>
</header>,
            <p
              className="App-intro"
>
              To get started, edit 
              <code>
                            src/App.js
              </code>
               and save to reload.
</p>,
            <Title
              text="jaime"
/>,
            <ul />,
            <ul />,
            <ul />,
            <p
              className="button-state"
>
              No!
</p>,
            <button
              onClick={[Function]}
>
              Click
</button>,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <header
              class="App-header"
>
              <img
                            src="logo.svg"
                            class="App-logo"
                            alt="logo"
              />
              <h1
                            class="App-title"
              >
                            Welcome to React
              </h1>
</header>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
/>,
                <h1
                  className="App-title"
>
                  Welcome to React
</h1>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  src="logo.svg"
                  class="App-logo"
                  alt="logo"
/>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "logo",
                  "className": "App-logo",
                  "src": "logo.svg",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <h1
                  class="App-title"
>
                  Welcome to React
</h1>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Welcome to React",
                  "className": "App-title",
                },
                "ref": null,
                "rendered": Array [
                  "Welcome to React",
                ],
                "type": "h1",
              },
            ],
            "type": "header",
          },
          Object {
            "instance": <p
              class="App-intro"
>
              To get started, edit 
              <code>
                            src/App.js
              </code>
              and save to reload.
</p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "To get started, edit ",
                <code>
                  src/App.js
</code>,
                " and save to reload.",
              ],
              "className": "App-intro",
            },
            "ref": null,
            "rendered": Array [
              "To get started, edit ",
              Object {
                "instance": <code>
                  src/App.js
</code>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "src/App.js",
                },
                "ref": null,
                "rendered": Array [
                  "src/App.js",
                ],
                "type": "code",
              },
              " and save to reload.",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "text": "jaime",
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                jaime
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "jaime",
              },
              "ref": null,
              "rendered": Array [
                "jaime",
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": <ul />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "ul",
          },
          Object {
            "instance": <ul />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "ul",
          },
          Object {
            "instance": <ul />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "ul",
          },
          Object {
            "instance": <p
              class="button-state"
>
              No!
</p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No!",
              "className": "button-state",
            },
            "ref": null,
            "rendered": Array [
              "No!",
            ],
            "type": "p",
          },
          Object {
            "instance": <button>
              Click
</button>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Click",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              "Click",
            ],
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<App /> shallow rendering matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
>
          <img
                    alt="logo"
                    className="App-logo"
                    src="logo.svg"
          />
          <h1
                    className="App-title"
          >
                    Welcome to React
          </h1>
</header>,
        <p
          className="App-intro"
>
          To get started, edit 
          <code>
                    src/App.js
          </code>
           and save to reload.
</p>,
        <Title
          text="jaime"
/>,
        <ul />,
        <ul />,
        <ul />,
        <p
          className="button-state"
>
          No!
</p>,
        <button
          onClick={[Function]}
>
          Click
</button>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="App-logo"
              src="logo.svg"
/>,
            <h1
              className="App-title"
>
              Welcome to React
</h1>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "App-logo",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React",
              "className": "App-title",
            },
            "ref": null,
            "rendered": "Welcome to React",
            "type": "h1",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "To get started, edit ",
            <code>
              src/App.js
</code>,
            " and save to reload.",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "To get started, edit ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "src/App.js",
            },
            "ref": null,
            "rendered": "src/App.js",
            "type": "code",
          },
          " and save to reload.",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "jaime",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "ul",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "No!",
          "className": "button-state",
        },
        "ref": null,
        "rendered": "No!",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Click",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Click",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
>
            <img
                        alt="logo"
                        className="App-logo"
                        src="logo.svg"
            />
            <h1
                        className="App-title"
            >
                        Welcome to React
            </h1>
</header>,
          <p
            className="App-intro"
>
            To get started, edit 
            <code>
                        src/App.js
            </code>
             and save to reload.
</p>,
          <Title
            text="jaime"
/>,
          <ul />,
          <ul />,
          <ul />,
          <p
            className="button-state"
>
            No!
</p>,
          <button
            onClick={[Function]}
>
            Click
</button>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="App-logo"
                src="logo.svg"
/>,
              <h1
                className="App-title"
>
                Welcome to React
</h1>,
            ],
            "className": "App-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "App-logo",
                "src": "logo.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome to React",
                "className": "App-title",
              },
              "ref": null,
              "rendered": "Welcome to React",
              "type": "h1",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "To get started, edit ",
              <code>
                src/App.js
</code>,
              " and save to reload.",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "To get started, edit ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "src/App.js",
              },
              "ref": null,
              "rendered": "src/App.js",
              "type": "code",
            },
            " and save to reload.",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "jaime",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No!",
            "className": "button-state",
          },
          "ref": null,
          "rendered": "No!",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Click",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Click",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
